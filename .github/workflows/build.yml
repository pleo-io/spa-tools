# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        description: "Name of the app, unique for the repo, kebab-cased"
        type: string
      bucket_name:
        required: true
        description: "Name of the S3 registry bucket"
        type: string
      build_dir:
        required: true
        description: "Location of the deploy bundle after running the build command"
        type: string
      build_cmd:
        required: true
        description: "Command for building the deploy bundle"
        type: string
      pnpm_version:
        required: true
        description: "pnpm version to configure"
        type: number
      registry_scope:
        required: false
        default: "@pleo-io"
        description: "Org scope for the GitHub Package Registry"
        type: string
    outputs:
      tree_hash:
        description: "Tree hash of the code built"
        value: ${{ jobs.build.outputs.tree_hash }}
      bundle_uri:
        description: "S3 URI of the bundle in the registry bucket"
        value: ${{ jobs.build.outputs.bundle_uri }}

jobs:
  build:
    name: Build & Upload
    runs-on: ubuntu-22.04
    outputs:
      tree_hash: ${{ steps.s3-cache.outputs.hash }}
      bundle_uri: ${{ steps.bundle-uri.outputs.uri }}
    steps:
      - uses: actions/checkout@v4.1.4

      - name: Check S3 Cache
        uses: pleo-io/s3-cache-action@v3.0.0
        id: s3-cache
        with:
          bucket-name: ${{ inputs.bucket_name }}
          key-prefix: build/${{ inputs.app_name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_FRONTEND_REGISTRY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FRONTEND_REGISTRY }}
          aws-region: eu-west-1

      - uses: pnpm/action-setup@v2
        if: steps.s3-cache.outputs.processed == 'false'
        with:
          version: ${{ inputs.pnpm_version }}

      - uses: actions/setup-node@v3.6.0
        if: steps.s3-cache.outputs.processed == 'false'
        with:
          node-version: "20"
          registry-url: "https://npm.pkg.github.com"
          scope: ${{ inputs.registry_scope }}
          cache: "pnpm"

      - name: Install Dependencies
        if: steps.s3-cache.outputs.processed == 'false'
        run: pnpm install --frozen-lockfile --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_REGISTRY_NPM_TOKEN }}

      - name: Build
        if: steps.s3-cache.outputs.processed == 'false'
        run: ${{ inputs.build_cmd }}

      - name: Get Bundle S3 URI
        id: bundle-uri
        run: |
          echo "uri=s3://${{ inputs.bucket_name }}/bundles/${{ github.repository }}/${{ inputs.app_name }}/${{ steps.s3-cache.outputs.hash }}.tar.gz" >> $GITHUB_OUTPUT

      - uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_FRONTEND_REGISTRY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FRONTEND_REGISTRY }}
          aws-region: eu-west-1

      - name: Compress & Upload Bundle
        if: steps.s3-cache.outputs.processed == 'false'
        run: |
          tar -zcvf bundle.tar.gz -C ${{ inputs.build_dir }} .
          aws s3 cp bundle.tar.gz ${{ steps.bundle-uri.outputs.uri }}
