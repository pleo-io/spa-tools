# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: "Name of the deployment environment"
        type: string
      app_name:
        required: false
        description: "Name of the app, displayed in PR description"
        type: string
      bundle_uri:
        required: true
        description: "S3 URI of the bundle in the registry bucket"
        type: string
      bundle_dir:
        required: false
        default: "dist"
        description: "Directory where the bundle should be unpacked"
        type: string
      tree_hash:
        required: true
        description: "Tree hash of the code to deploy"
        type: string
      bucket_name:
        required: true
        description: "Name of the S3 origin bucket"
        type: string
      domain_name:
        required: true
        description: "Domain name for the app (e.g. app.example.com)"
        type: string
      inject_config_cmd:
        required: false
        description: "Command to run to inject the environment config"
        type: string
      registry_scope:
        required: false
        default: "@pleo-io"
        description: "Org scope for the GitHub Package Registry"
        type: string
    outputs:
      deployment_url:
        description: "URL where the deployment can be accessed"
        value: ${{ jobs.deploy.outputs.deployment_url }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment  }}
      url: ${{ steps.deployment-url.outputs.url }}
    outputs:
      deployment_url: ${{ steps.deployment-url.outputs.url }}
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: "16"
          registry-url: "https://npm.pkg.github.com"
          scope: ${{ inputs.registry_scope }}

      # For feature preview deployments we're using the permalink as the deploy URL for the GitHub deployment
      # For deployments on the default branch we're using the domain name passed via inputs.
      - name: Get Deployment URL
        id: deployment-url
        run: |
          DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
          if [[ -z "$DEFAULT_BRANCH" ]]; then
              echo "Could not determine default branch"
              exit 1
          fi
          SUBDOMAIN=$([[ $GITHUB_REF = "refs/heads/$DEFAULT_BRANCH" ]] && echo "" || echo "preview-${{ inputs.tree_hash }}.")
          echo "url=https://${SUBDOMAIN}${{ inputs.domain_name }}" >> $GITHUB_OUTPUT

      - name: Setup AWS Credentials for Registry Bucket Access
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_FRONTEND_REGISTRY }}
          aws-secret-access-key:
            ${{ secrets.AWS_SECRET_ACCESS_KEY_FRONTEND_REGISTRY }}
          aws-region: eu-west-1

      - name: Download & Unpack Bundle
        run: |
          aws s3 cp ${{ inputs.bundle_uri }} bundle.tar.gz
          mkdir ${{ inputs.bundle_dir }} && tar -xvzf bundle.tar.gz -C ${{ inputs.bundle_dir }}

      - name: Setup AWS Credentials for Origin Bucket Access
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Inject Environment Config
        if: inputs.inject_config_cmd
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_REGISTRY_NPM_TOKEN }}
          SPA_BUNDLE_DIR: ${{ inputs.bundle_dir }}
          SPA_ENV: ${{inputs.environment}}
          SPA_TREE_HASH: ${{ inputs.tree_hash}}
        run: ${{inputs.inject_config_cmd }}

      - name: Copy Static Files
        run: |
          aws s3 cp ${{ inputs.bundle_dir }}/static s3://${{ inputs.bucket_name }}/static \
            --cache-control 'public,max-age=31536000,immutable' \
            --recursive

      - name: Copy HTML Files
        run: |
          aws s3 cp ${{ inputs.bundle_dir }}/ s3://${{ inputs.bucket_name }}/html/${{ inputs.tree_hash }} \
           --cache-control 'public,max-age=31536000,immutable' \
           --recursive \
           --exclude "static/*"

      - name: Update Cursor File
        id: cursor-update
        uses: pleo-io/spa-tools/actions/cursor-deploy@spa-github-actions-v8.0.2
        with:
          bucket_name: ${{ inputs.bucket_name }}

      - name: Update PR Description
        uses: pleo-io/spa-tools/actions/post-preview-urls@spa-github-actions-v8.0.2
        if: github.event_name == 'pull_request'
        with:
          app_name: ${{ inputs.app_name }}
          links: |
            [
              {"name": "Latest", "url": "https://${{ steps.cursor-update.outputs.branch_label }}.${{ inputs.domain_name }}"},
              {"name": "Current Permalink", "url": "${{ steps.deployment-url.outputs.url }}"}
            ]

      - name: Upload Deployed Bundle as Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: bundle-${{ inputs.tree_hash }}
          path: bundle.tar.gz

      - name: Verify app deployment
        if: inputs.inject_config_cmd
        # We expect the injection to insert the version in the HTML.
        run:
          curl --silent --show-error ${{ steps.deployment-url.outputs.url }} |
          grep -q ${{ inputs.tree_hash }}
